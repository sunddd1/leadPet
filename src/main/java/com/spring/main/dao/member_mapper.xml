<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<!-- 누가 이 XML 을 사용할까? 누구와 연결? -->
<mapper namespace="com.spring.main.dao.MemberDAO">
	
	<!-- 탈퇴 -->
	<update id="withdraw">
		UPDATE member SET withdraw = 'Y' WHERE id=#{id}
	</update>
	
	<!-- 비번 일치 확인 -->
	<select id="checkPw" resultType="String">
		SELECT password FROM member WHERE id = #{param1} 
	</select>
	
	<!-- 탈퇴 복구 -->
	<update id="restore">
		UPDATE member SET withdraw = 'N' WHERE id=#{id}
	</update>

	<!-- id로 유저 가져오기 -->
	<select id="getMember" resultType="member">
		SELECT
			id, name, age, gender, email, reg_date, black, withdraw, 
			change_date, nickname, point, grade
		FROM
			member
		WHERE
			id=#{param1}
	</select>

	<!-- 탈퇴일 최신으로 변경 -->
	<update id="updateChangeDate">
		UPDATE
			member
		SET
			change_date=sysdate
		WHERE
			id=#{param1}
	</update>

	<!-- 유저 세부사항 수정 -->
	<update id="update" parameterType="member">
		UPDATE
			member
		<set>
			<if test="password != null">password=#{password},</if>
			<if test="name != null">name=#{name},</if>
			<if test="age != null">age=#{age},</if>
			<if test="gender != null">gender=#{gender},</if>
			<if test="email != null">email=#{email},</if>
			<if test="nickname != null">nickname=#{nickname}</if>
			<if test="grade != null">grade=#{grade}</if>
		</set>
		WHERE
			id=#{id}		
	</update>

	<!-- 작성글 목록 -->
	<select id="writeList" resultType="board">
		select * from bbs where nickname = (select nickname from member where id=#{param1}) and mod_del='N' and bbs_blind='N' 
		
	</select>
	
	<!-- 글 상세보기 -->
	<select id="detail" resultType="board">
		SELECT 
			*		
		FROM bbs WHERE bbs_idx=#{param1}
	</select>
	
	<!-- 글 상세보기의 파일 목록  -->
	<select id="fileList" resultType="board">
		SELECT  * FROM bbs_img WHERE bbs_idx=#{param1}
	</select>
	
	<!-- 작성글 삭제 -->
	<update id="deleteWriteList">
		UPDATE bbs SET mod_del = 'Y' WHERE nickname=(select nickname from member where id=#{param1}) and bbs_idx=#{param2}
	</update>
	
	<!-- 관심 유저 등록 -->
	<insert id="addInterestId">
		INSERT INTO interest(id, add_id)
		VALUES(#{param1}, #{param2})
	</insert>

	<!-- 관심 유저 삭제 -->
	<delete id="deleteInterestId">
		DELETE FROM interest
		WHERE
			id=#{param1} AND add_id=#{param2}
	</delete>
	
	<!-- 관심유저로 등롣되어있나 확인 -->
	<select id="hasInterestId" resultType="int">
		SELECT COUNT(*)
		FROM interest
		WHERE
			id=#{param1} AND add_id=#{param2}
	</select>
	
	<!-- 관심유저들 가져오기 -->
	<select id="getInterestUsers" resultType="interestUser">
		SELECT
			interest.id, interest.add_id, interest.reg_date, member.nickname
		FROM
			interest INNER JOIN member
		ON
			interest.add_id = member.id
        WHERE
            interest.id = #{param1}
	</select>
	
	<!-- 관심유저 수 불러오기 -->
	<select id="getInterestUserCount" resultType="int">
		SELECT COUNT(*) 
		FROM interest
		WHERE
			id=#{param1}
	</select>
	
	<!-- 페이징 처리된 관심유저 수 불러오기 -->
	<select id="getInterestUserList" resultType="InterestUser">
		SELECT 
			id, add_id, reg_date, nickname, rnum
		FROM(
			SELECT 
				interest.id, interest.add_id, interest.reg_date, member.nickname, 
				ROW_NUMBER() OVER(ORDER BY interest.reg_date DESC) AS rnum 
			FROM
				interest INNER JOIN member
			ON
				interest.add_id = member.id
	        WHERE
	            interest.id = #{param1}
		)
		WHERE 
			rnum BETWEEN #{param2} AND #{param3}
	</select>
	
	<!-- 닉네임으로 아이디 찾기 -->
	<select id="findIdByNickname" resultType="String">
		SELECT
			id
		FROM
			member
		WHERE
			nickname=#{param1}
	</select>
	
</mapper>